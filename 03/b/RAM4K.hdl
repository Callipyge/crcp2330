// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[0..2], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    RAM512(in = in, load = a, address = address[3..11], out = Ram1);
    RAM512(in = in, load = b, address = address[3..11], out = Ram2);
    RAM512(in = in, load = c, address = address[3..11], out = Ram3);
    RAM512(in = in, load = d, address = address[3..11], out = Ram4);
    RAM512(in = in, load = e, address = address[3..11], out = Ram5);
    RAM512(in = in, load = f, address = address[3..11], out = Ram6);
    RAM512(in = in, load = g, address = address[3..11], out = Ram7);
    RAM512(in = in, load = h, address = address[3..11], out = Ram8);

    Mux8Way16(a = Ram1, b = Ram2, c = Ram3, d = Ram4, e = Ram5, f = Ram6, g = Ram7, h = Ram8, sel = address[0..2], out = out);
}